substitutions:
  name: bridge-rf-ir-1floor
  friendly_name: Bridge RF IR 1Floor
  friendly_name_short: bridge_rf_ir_1floor

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: esphome.bridge-rf-ir-1floor
    version: '1.0'

esp8266:
  board: esp01_1m
  framework:
    version: recommended
  restore_from_flash: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "bridge 1floor"
    password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.5
    gateway: 192.168.0.1
    subnet: 255.255.255.0
  reboot_timeout: 0s

#web_server:
#  port: 80
#  auth:
#    username: 'admin'
#    password: !secret wifi_password

logger:
#  level: WARN
  level: DEBUG
  baud_rate: 0

api:
  reboot_timeout: 0s
  actions:
    - action: send_rf_code
      variables:
        sync: int
        low: int
        high: int
        code: int
      then:
        - rf_bridge.send_code:
            sync: !lambda 'return sync;'
            low: !lambda 'return low;'
            high: !lambda 'return high;'
            code: !lambda 'return code;'
    - action: learn
      then:
        - rf_bridge.learn
ota:
  platform: esphome

captive_portal:

uart:
  tx_pin: 1
  rx_pin: 3
  baud_rate: 19200

rf_bridge:
#  id: rf_bridge1
  on_code_received:
    then:
      - homeassistant.event:
          event: esphome.rf_code_received
          data:
            sync: !lambda 'return format_hex(data.sync);'
            low: !lambda 'return format_hex(data.low);'
            high: !lambda 'return format_hex(data.high);'
            code: !lambda 'return format_hex(data.code);'
      - if:
          condition:
            - lambda: 'return (data.code == 0x8A4192);'
          then:
            - binary_sensor.template.publish:
                id: sensor_garage_button
                state: true
                
text_sensor:
  # ESPHome version
#  - platform: version
#    hide_timestamp: true
#    name: "ESPHome Version"
  # IP address and connected SSID
  - platform: wifi_info
    ip_address:
      name: "IP Address"
  # Send Uptime in raw seconds
  - platform: template
    name: Uptime
    id: uptime_human
    icon: mdi:clock-start
    entity_category: diagnostic
sensor:
# показывает uptime норм вместо просто сек
  - platform: uptime
    name: Uptime
    id: uptime_sensor
    update_interval: 60s
    internal: True
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            # Custom C++ code to generate the result
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "")
              //  (to_string(seconds) + "s")
              ).c_str();
  - platform: wifi_signal 
    name: Wifi Signal
    id: wifi_signal_db
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    update_interval: 60s
    unit_of_measurement: "%"
    entity_category: "diagnostic"

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"
# Сенсор кнопки у входа 1- гараж sync=0x292C low=0x015E high=0x0406 code=0x8A4192
  - platform: template
    name: "Garage"
    id: sensor_garage_button
    publish_initial_state: true
    on_press:
      then:
        - delay: 2s
        - binary_sensor.template.publish: # Если не нужно сброс сенсора через 2 сек -убрать on_press
            id: sensor_garage_button
            state: false

light:
  - platform: status_led
    name: "Switch state"
    pin:
      number: GPIO13
      inverted: true
    restore_mode: RESTORE_DEFAULT_ON
button:
  # Restart the ESP
  - platform: restart
    name: "Restart"
# Кнопка сброса сенсоров
  - platform: template
    name: "Reset Sensors"
    id: reset_sensors
    on_press:
      - binary_sensor.template.publish:
          id: water_kitchen
          state: false
# Кнопка гараж у входа
  - platform: template
    name: "Garage"
    id: button_garage
    on_press:
      - rf_bridge.send_code:
          sync: 0x292C
          low: 0x015E
          high: 0x0406
          code: 0x8A4192
  - platform: template
    name: Power-TV
    on_press:
      - remote_transmitter.transmit_samsung:
          data: 0xE0E040BF
          nbits: 32
          repeat: 
            times: 2
            wait_time: 30ms
remote_receiver:
  pin:
    number: GPIO12
    inverted: true
    mode: INPUT_PULLUP
  dump: all
remote_transmitter:
  pin: GPIO14
  carrier_duty_percent: 50%
