substitutions:
  name: relay-podval-dvor
  friendly_name: Relay Podval Dvor Priyamok
  friendly_name_short: relay_podval_dvor_priyamok

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: parus.${friendly_name}
    version: 04.05.2025
  on_boot:
    - priority: -100.0
      then:
        - globals.set:
            id: poliv_duration_value
            value: !lambda return id(poliv_urgent).state;
esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: WARN
  baud_rate: 0
  logs:
    component: ERROR

api:
  reboot_timeout: 0s #  reboot_timeout: 0s # отключение перезагрузки, если нет подключения к НА

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s
  ap:
    ssid: "relay podval Fallback Hotspot"
    password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.4
    gateway: !secret gateway
    subnet: !secret subnet
#  reboot_timeout: 0s # отключение перезагрузки, если нет подключения к WiFi. НЕ СОВЕТУЮ
web_server:
  version: 3
  port: 80
  auth:
    username: 'admin'
    password: !secret wifi_password
  sorting_groups:
    - id: sorting_group_light
      name: "Light"
      sorting_weight: 10
    - id: sorting_group_poliv
      name: "Poliv"
      sorting_weight: 20
    - id: sorting_group_poliv_week
      name: "Poliv Week"
      sorting_weight: 30
    - id: sorting_group_water_pump
      name: "Water Pump"
      sorting_weight: 40
    - id: sorting_group_motion
      name: "Motion"
      sorting_weight: 50
    - id: sorting_group_gas
      name: "Gas"
      sorting_weight: 60
    - id: sorting_group_time_sun
      name: "Time&Sun"
      sorting_weight: 70
captive_portal:
globals: # Переменная значения длительности таймера полива в секундах
  - id: poliv_duration_value
    type: int
    restore_value: no
    initial_value: "0"
# Time & sun
time:
# Example configuration entry homeassistant time
  - platform: homeassistant
    id: homeassistant_time
# Example configuration entry sntp time
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
    servers:
     - 0.ru.pool.ntp.org
     - ntp0.ntp-servers.net
     - 2.pool.ntp.org
# Текущие координаты населенного пункта для вычисления времени захода и восхода Солнца
sun:
  latitude: !secret latitude
  longitude: !secret longitude
  id: sun_sun

valve:
  - platform: template
    name: "Gas Valve"
    icon: "mdi:valve"
    web_server:
      sorting_group_id: sorting_group_gas
    lambda: |-
      if (id(gas_kran_state).state) {
        return VALVE_OPEN;
      } else {
        return VALVE_CLOSED;
      }
    open_action:
      - switch.turn_on: gas_open
    close_action:
      - switch.turn_on: gas_closed
#    stop_action:
#      - switch.turn_on: stop_valve_switch
    optimistic: true

button:
  - platform: restart
    icon: mdi:restart
    name: "ESP Reboot"
    entity_category: diagnostic
# Кнопка ворота старт-стоп
  - platform: output
    name: "Vorota"
    output: vorota
    duration: 500ms
    icon: "mdi:gate"

uart:
  id: ld2410_uart
  tx_pin: GPIO1
  rx_pin: GPIO3
  parity: NONE
  stop_bits: 1
  baud_rate: 256000

ld2410:
  id: holl_ld2410
  uart_id: ld2410_uart

binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
      id: presence_podval
      web_server:
        sorting_group_id: sorting_group_motion
    has_moving_target:
      name: Moving Target
      disabled_by_default: true
    has_still_target:
      name: Still Target
      disabled_by_default: true
    out_pin_presence_status:
      name: out pin presence status
      disabled_by_default: true
  - platform: template
    name: "Podval Motion"
    id: podval_motion
    web_server:
      sorting_group_id: sorting_group_motion
    icon: "mdi:motion-sensor"
    lambda: 'return id(presence_podval).state;'
    filters:
      - delayed_on: 100ms
      - delayed_off: 30s
    on_press:
      - if:
          condition:
            and:
              - binary_sensor.is_off: switch_light_podval
              - switch.is_off: light_podval
          then:
            - switch.turn_on: light_podval
    on_release:
      - if:
          condition:
            and:
              - binary_sensor.is_off: switch_light_podval
              - switch.is_on: light_podval
          then:
            - switch.turn_off: light_podval
# Входы выключателей света
  - platform: gpio
    pin: GPIO34
    name: Human Presence
    device_class: presence
    disabled_by_default: true
  - platform: gpio
    pin:
      number: GPIO35
      inverted: false
    name: "Switch Light Podval"
    id: switch_light_podval
    icon: "mdi:lightbulb-question-outline"
    web_server:
      sorting_group_id: sorting_group_light
    filters:
      - delayed_on_off:
          time_on: 200ms
          time_off: 200ms
    on_press:
      then:
        - switch.turn_on: light_podval
    on_release:
      then:
        - switch.turn_off: light_podval
  - platform: status
    name: Status
    icon: "mdi:check-network-outline"

  - platform: gpio
    pin:
      number: GPIO32                                     # Контакт состояния газового крана
      inverted: false
      mode:
        input: true
        pullup: true
    name: "Gas Kran State"
    icon: "mdi:pipe-valve"
    web_server:
      sorting_group_id: sorting_group_gas
    id: gas_kran_state
    filters:
      - delayed_on_off:
          time_on: 200ms
          time_off: 200ms
  - platform: gpio
    pin:
      number: GPIO33
      inverted: false
      mode:
        input: true
        pullup: true
    name: "Vorota State"
    id: vorota_state
    icon: "mdi:gate-alert"
    filters:
      - delayed_on_off:
          time_on: 200ms
          time_off: 200ms
  - platform: gpio
    pin:
      number: GPIO25                               # Реле давления контакт срабатывания для запуска насоса
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Press Relay contact"
    id: press_relay_priyamok
    icon: "mdi:electric-switch"
    web_server:
      sorting_group_id: sorting_group_water_pump
    filters:
      - delayed_on_off:
          time_on: 200ms
          time_off: 200ms
    on_press:
      then:
        - if: 
            condition:
              - switch.is_on: auto_pump # Если выключатель автодавление включен, насос включается
            then:
              - switch.turn_on: water_pump
    on_release:
      then:
        - delay: 4s
        - switch.turn_off: water_pump
##### save from HA #######
  - platform: template
    name: "Night"
    id: night
    web_server:
      sorting_group_id: sorting_group_time_sun
    icon: "mdi:weather-night"
    filters:
      - delayed_on: 2s
      - delayed_off: 2s
    lambda: |-
      if (id(sun_sun).elevation() < 0) {
        return true; // Сенсор включен после заката и до рассвета
      } else {
        return false; // Выключить сенсор до заката и после рассвета
      }
  - platform: template
    name: "Day"
    id: day
    icon: "mdi:white-balance-sunny"
    web_server:
      sorting_group_id: sorting_group_time_sun
    filters:
      - delayed_on: 2s
      - delayed_off: 2s
    lambda: |-
      if (id(sun_sun).elevation() > 0) {
        return true; // Сенсор включен после рассвета и до заката
      } else {
        return false; // Cенсор выключить после заката и до рассвета
      }

  - platform: template
    name: "Sunset-Midnight"
    id: sensor_sunset_midnight
    icon: "mdi:weather-sunset-down"
    web_server:
      sorting_group_id: sorting_group_time_sun
    filters:
      - delayed_on: 10s
      - delayed_off: 10s
    lambda: |-
      if (id(sun_sun).elevation() < 0 && id(homeassistant_time).now().hour < 24 && id(sntp_time).now().hour > 10) {
        return true; // Сенсор включен после заката и до полуночи
      } else {
        return false; // Выключить сенсор до заката и после полуночи
      }

  - platform: template
    name: "Midnight-Sunrise"
    id: sensor_midnight_sunrise
    icon: "mdi:weather-sunset-up"
    web_server:
      sorting_group_id: sorting_group_time_sun
    filters:
      - delayed_on: 10s
      - delayed_off: 10s
    lambda: |-
      auto sunrise = id(sun_sun).sunrise(id(sun_sun).elevation());
      if (id(sun_sun).elevation() < 0 && id(sntp_time).now().hour < 10) {
      // не работает     if (id(sun_sun).elevation() < 0 && id(homeassistant_time).now().hour < sunrise.value().hour) {
        return true; // Сенсор включен после полуночи и до восхода
      } else {
        return false; // Выключить сенсор после восхода
      }
  - platform: template
    id: poliv_timer_state
    name: Poliv Timer State
    icon: "mdi:clock-check"
    web_server:
      sorting_group_id: sorting_group_poliv
sensor:
  - platform: ld2410
    light:
      name: light
      disabled_by_default: true
    moving_distance:
      name : Moving Distance
      disabled_by_default: true
    still_distance:
      name: Still Distance
      disabled_by_default: true
    moving_energy:
      name: Move Energy
      disabled_by_default: true
    still_energy:
      name: Still Energy
      disabled_by_default: true
    detection_distance:
      name: Detection Distance
      id: podval_distance
      disabled_by_default: true
    g0:
      move_energy:
        name: g0 move energy
        disabled_by_default: true
      still_energy:
        name: g0 still energy
        disabled_by_default: true
    g1:
      move_energy:
        name: g1 move energy
        disabled_by_default: true
      still_energy:
        name: g1 still energy
        disabled_by_default: true
    g2:
      move_energy:
        name: g2 move energy
        disabled_by_default: true
      still_energy:
        name: g2 still energy
        disabled_by_default: true
    g3:
      move_energy:
        name: g3 move energy
        disabled_by_default: true
      still_energy:
        name: g3 still energy
        disabled_by_default: true
    g4:
      move_energy:
        name: g4 move energy
        disabled_by_default: true
      still_energy:
        name: g4 still energy
        disabled_by_default: true
    g5:
      move_energy:
        name: g5 move energy
        disabled_by_default: true
      still_energy:
        name: g5 still energy
        disabled_by_default: true
    g6:
      move_energy:
        name: g6 move energy
        disabled_by_default: true
      still_energy:
        name: g6 still energy
        disabled_by_default: true
    g7:
      move_energy:
        name: g7 move energy
        disabled_by_default: true
      still_energy:
        name: g7 still energy
        disabled_by_default: true
    g8:
      move_energy:
        name: g8 move energy
        disabled_by_default: true
      still_energy:
        name: g8 still energy
        disabled_by_default: true
# This makes the uptime information human readable instead of just seconds.  i.e. days, hours, minutes, seconds
  - platform: uptime
    name: Uptime
    id: uptime_sensor
    update_interval: 60s
    internal: True
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "д " : "") +
                (hours ? to_string(hours) + "ч " : "") +
                (minutes ? to_string(minutes) + "мин " : "") +
                (minutes > 0 ? "" : (to_string(seconds) + "с"))
              ).c_str();

  - platform: wifi_signal 
    name: Wifi Signal
    id: wifi_signal_db
    icon: "mdi:wifi"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    update_interval: 60s
    unit_of_measurement: "%"
    entity_category: "diagnostic"
  - platform: udp
    id: water_pressure
    provider: water-pressure-podval
    remote_id: pressure_bar
  - platform: template    # вывод давления воды через udp от esp water pressure
    name: "Water Pressure"
    id: new_pressure
    device_class: pressure
    web_server:
      sorting_group_id: sorting_group_water_pump
    icon: "mdi:gauge"
    unit_of_measurement: "bar"
    lambda: 'return (id(water_pressure).state);'
    on_value_range: # отключим питание реле давления и насоса при > 4 bar
      - below: 3.9
        then:
          - switch.turn_on:
              id: press_relay
      - above: 4
        then:
          - switch.turn_off:
              id: press_relay
          - switch.turn_off:
              id: water_pump
udp:
switch:
# Кнопка на основе switch
#  - platform: gpio
#    name: "Gate Remote"
#    icon: "mdi:gate"
#    id: gate
#    pin:
#      number: GPIOxx  
#    on_turn_on:
#    - delay: 500ms
#    - switch.turn_off: gate
  - platform: ld2410
    engineering_mode:
      name: "engineering mode"
      disabled_by_default: true
    bluetooth:
      name: "control bluetooth"
      disabled_by_default: true
  - platform: template
    name: 'Poliv Urgent'
    optimistic: true
    id: poliv_urgent
    icon: "mdi:repeat"
    web_server:
      sorting_group_id: sorting_group_poliv
    on_turn_on:
      - switch.turn_on:
          id: poliv_gazon
      - lambda: !lambda |-
          id(poliv_timer_state).publish_state(true);
      - script.execute: dinamic_timer
    on_turn_off:
      - script.stop: dinamic_timer
      - script.stop: timer_tick
      - switch.turn_off:
          id: poliv_gazon
# Выходы GPIO
  - platform: gpio
    name: Poliv Gazon
    id: poliv_gazon
    web_server:
      sorting_group_id: sorting_group_poliv
    icon: "mdi:grass"
    pin:
      number: GPIO4                            # Полив газон выключатель
      inverted: false
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - switch.turn_on: water_pump
      - script.execute: dinamic_timer
    on_turn_off:
      - delay: 2s
      - switch.turn_off: water_pump
      - script.stop: dinamic_timer
  - platform: gpio
    name: Waterpump
    id: water_pump
    web_server:
      sorting_group_id: sorting_group_water_pump
    icon: "mdi:pump"
    pin:
      number: GPIO13                           # Пускатель насоса
      inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: Press Relay
    id: press_relay
    web_server:
      sorting_group_id: sorting_group_water_pump
    icon: "mdi:power"
    pin:
      number: GPIO14                           # Питание 220в для реле давления
      inverted: false
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    name: Light podval
    id: light_podval
    web_server:
      sorting_group_id: sorting_group_light
    icon: "mdi:lightbulb"
    pin:
      number: GPIO16                          # Реле свет подвал
      inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: 12V
    id: switch12v
    icon: "mdi:power"
    pin:
      number: GPIO17                            # Питание 12в для датчиков и устройств
      inverted: false
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio                                # Выключатель свет забор
    name: Light Zabor
    id: light_zabor
    web_server:
      sorting_group_id: sorting_group_light
    icon: "mdi:lightbulb"
    pin:
      number: GPIO18
      inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: Light Dvor
    id: light_dvor
    web_server:
      sorting_group_id: sorting_group_light
    icon: "mdi:lightbulb"
    pin:
      number: GPIO19                             # Выключатель свет двор
      inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio                                 # Выключатель газ закрыть
    name: "Gas Closed"
    pin: GPIO21
    id: gas_closed
    web_server:
      sorting_group_id: sorting_group_gas
    icon: "mdi:pipe-valve"
    restore_mode: ALWAYS_OFF
    interlock: [gas_open] # Функция предотвращения одновременного включения выключателей gas_open gas_closed
    interlock_wait_time: 1s # Время ожидания перед повторным включением в группе интерлок
    on_turn_on:
    - delay: 8s
    - switch.turn_off: gas_closed # Режим кнопки задержка 8 s
  - platform: gpio
    name: "Gas Open"
    pin: GPIO22
    id: gas_open
    icon: "mdi:pipe-valve"
    web_server:
      sorting_group_id: sorting_group_gas
    restore_mode: ALWAYS_OFF
    interlock: [gas_closed]
    interlock_wait_time: 1s # Время ожидания перед повторным включением в группе интерлок
    on_turn_on:
    - delay: 8s
    - switch.turn_off: gas_open # Режим кнопки задержка 8 s
  - platform: template             # Автодавление. При включении питание насоса будет включаться при необходимости.
    name: 'Auto Pressure'
    optimistic: true
    id: auto_pump
    web_server:
      sorting_group_id: sorting_group_water_pump
    icon: "mdi:repeat"
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template                 # Выключатель автополив. Если включен, в указанное время полив производится.
    name: 'Auto Poliv'
    optimistic: true
    id: auto_poliv
    icon: "mdi:repeat"
    web_server:
      sorting_group_id: sorting_group_poliv
    restore_mode: RESTORE_DEFAULT_OFF
#### Свет забор
# Вкл/выкл свет забор после заката до полуночи
  - platform: template
    id: switch_sunset_midnight_zabor
    name: Zabor Sunset Midnight
    icon: "mdi:weather-sunset-down"
    web_server:
      sorting_group_id: sorting_group_time_sun
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    id: switch_midnight_sunrise_zabor
    web_server:
      sorting_group_id: sorting_group_time_sun
    name: Zabor Midnight Sunrise
    icon: "mdi:weather-sunset-up"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON 
  - platform: template
    id: switch_hight_zabor
    web_server:
      sorting_group_id: sorting_group_time_sun
    name: Zabor Night
    icon: "mdi:weather-night"
    restore_mode: RESTORE_DEFAULT_ON 
    optimistic: true
  - platform: template
    id: switch_sunset_midnight_dvor
    web_server:
      sorting_group_id: sorting_group_time_sun
    name: Dvor Sunset Midnight
    icon: "mdi:weather-sunset-down"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON 
  - platform: template
    id: switch_midnight_sunrise_dvor
    web_server:
      sorting_group_id: sorting_group_time_sun
    name: Dvor Midnight Sunrise
    icon: "mdi:weather-sunset-up"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    id: switch_hight_dvor
    name: Dvor Night
    web_server:
      sorting_group_id: sorting_group_time_sun
    icon: "mdi:weather-night"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
############## START component-dynamic-on-time
  - platform: template
    id: poliv_mon
    name: "Poliv Week: 1Mon"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_tue
    name: "Poliv Week: 2Tue"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_wed
    name: "Poliv Week: 3Wed"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_thu
    name: "Poliv Week: 4Thur"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_fri
    name: "Poliv Week: 5Fri"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_sat
    name: "Poliv Week: 6Sat"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_sun
    name: "Poliv Week: 7Sun"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
  - platform: template
    id: poliv_week_disabled
    name: "Poliv Week: Disable"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
external_components:
  source: github://hostcc/esphome-component-dynamic-on-time
dynamic_on_time:
  - id: lawn_schedule
    rtc: homeassistant_time
    hour: poliv_week_hour
    minute: poliv_week_minute
    mon: poliv_mon
    tue: poliv_tue
    wed: poliv_wed
    thu: poliv_thu
    fri: poliv_fri
    sat: poliv_sat
    sun: poliv_sun
    disabled: poliv_week_disabled
    on_time:
      - logger.log:
          format: 'schedule: Starting full sprinkler cycle'
          tag: lawn_sprinklers
          level: 'INFO'
      - switch.turn_on: 
          id: poliv_gazon
      - lambda: !lambda |-
          id(poliv_timer_state).publish_state(true);
      - script.execute: datetime_timeout

number:
  - platform: template
    id: poliv_week_hour
    name: "Poliv Week: Hour"
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    entity_category: config
    optimistic: true
    restore_value: true
    initial_value: 0
    min_value: 0
    max_value: 23
    step: 1
    mode: box
  - platform: template
    name: "Poliv Week: Minute"
    id: poliv_week_minute
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_poliv_week
    entity_category: config
    optimistic: true
    restore_value: true
    initial_value: 0
    min_value: 0
    max_value: 59
    step: 1
    mode: box
############ END component-dynamic-on-time
  - platform: ld2410
    timeout:
      name: timeout
      disabled_by_default: true
    light_threshold:
      name: light threshold
      disabled_by_default: true
    max_move_distance_gate:
      name: max move distance gate
      disabled_by_default: true
    max_still_distance_gate:
      name: max still distance gate
      disabled_by_default: true
    g0:
      move_threshold:
        name: g0 move threshold
        disabled_by_default: true
      still_threshold:
        name: g0 still threshold
        disabled_by_default: true
    g1:
      move_threshold:
        name: g1 move threshold
        disabled_by_default: true
      still_threshold:
        name: g1 still threshold
        disabled_by_default: true
    g2:
      move_threshold:
        name: g2 move threshold
        disabled_by_default: true
      still_threshold:
        name: g2 still threshold
        disabled_by_default: true
    g3:
      move_threshold:
        name: g3 move threshold
        disabled_by_default: true
      still_threshold:
        name: g3 still threshold
        disabled_by_default: true
    g4:
      move_threshold:
        name: g4 move threshold
        disabled_by_default: true
      still_threshold:
        name: g4 still threshold
        disabled_by_default: true
    g5:
      move_threshold:
        name: g5 move threshold
        disabled_by_default: true
      still_threshold:
        name: g5 still threshold
        disabled_by_default: true
    g6:
      move_threshold:
        name: g6 move threshold
        disabled_by_default: true
      still_threshold:
        name: g6 still threshold
        disabled_by_default: true
    g7:
      move_threshold:
        name: g7 move threshold
        disabled_by_default: true
      still_threshold:
        name: g7 still threshold
        disabled_by_default: true
    g8:
      move_threshold:
        name: g8 move threshold
        disabled_by_default: true
      still_threshold:
        name: g8 still threshold
        disabled_by_default: true
  - platform: template
    name: "Poliv Auto Duration"
    id: poliv_duration
    optimistic: true
    restore_value: true
    web_server:
      sorting_group_id: sorting_group_poliv
    icon: "mdi:clock-check-outline"
    unit_of_measurement: min
    mode: box
    min_value: 1
    max_value: 60
    step: 1
  - platform: template
    name: "Poliv Urgent Duration"
    id: poliv_urgent_number
    web_server:
      sorting_group_id: sorting_group_poliv
    icon: "mdi:clock-check-outline"
    optimistic: true
    restore_value: true
    unit_of_measurement: min
#    mode: box
    min_value: 1
    max_value: 60
    step: 1
    on_value: 
      then:
        - globals.set:
            id: poliv_duration_value
            value: !lambda return (int) x;
        - if:
            condition:
              - script.is_running: dinamic_timer
            then:
              - script.stop: dinamic_timer
              - script.stop: timer_tick
              - script.execute: dinamic_timer
              - script.execute: timer_tick
text_sensor:
  - platform: ld2410
    version:
      name: "firmware version"
      disabled_by_default: true

  - platform: template
    name: "Current HA Time"
    id: current_ha_time
    icon: "mdi:web-clock"
    web_server:
      sorting_group_id: sorting_group_time_sun
#    update_interval: 60s
#    lambda: return  id(homeassistant_time).now().strftime("%H:%M");
    lambda: |-
      char str[17]; time_t currTime = id(homeassistant_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return  { str };
    update_interval: 60s
  - platform: template
    name: "Current SNTP Time"
    id: current_sntp_time
    icon: "mdi:web-clock"
    web_server:
      sorting_group_id: sorting_group_time_sun
#    update_interval: 60s
#    lambda: return  id(sntp_time).now().strftime("%H:%M");
    lambda: |-
      char str[17]; time_t currTime = id(sntp_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return  { str };
    update_interval: 60s
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
      icon: "mdi:ip-network"
      filters:
        - lambda: 'return x.substr(7, x.length() - 7);'

  # Send Uptime in raw seconds
  - platform: template
    name: Uptime
    id: uptime_human
    icon: "mdi:clock-start"
    entity_category: diagnostic

# Датчики времени восхода и захода Солнца
  - platform: sun
    name: Sun Next Sunrise
    web_server:
      sorting_group_id: sorting_group_time_sun
    type: sunrise
  - platform: sun
    name: Sun Next Sunset
    web_server:
      sorting_group_id: sorting_group_time_sun
    type: sunset
# Отображение реального времени, оставшегося в таймере
  - name: "Poliv Time Remaining"
    id: poliv_time_remaining
    platform: template
    icon: "mdi:clock-end"
    web_server:
      sorting_group_id: sorting_group_poliv
    update_interval: 1s  # Обновляем каждую секунду
    lambda: |
      char buff[20];
      int hr, min, sec;
      hr = min = sec = 0;
      if (!id(poliv_timer_state).state) {
        return {"Отключено"};
      } else {
        int _remaining_sec = id(poliv_duration_value);  // Получаем значение в секундах
        hr = _remaining_sec / 3600;
        min = (_remaining_sec % 3600) / 60;
        sec = _remaining_sec % 60;
        snprintf(buff, sizeof(buff), "%02d:%02d:%02d", hr, min, sec);
        return to_string(buff);
      }
select:
  - platform: ld2410
    distance_resolution:
      name: "distance resolution"
      disabled_by_default: true
    baud_rate:
      name: "baud rate"
      disabled_by_default: true
    light_function:
      name: light function
      disabled_by_default: true
    out_pin_level:
      name: out pin level
      disabled_by_default: true

datetime:
  # Example DateTime
  - platform: template
    id: datetime_on
#    time_id: my_time
    type: time
    name: "Poliv on Time"
    icon: "mdi:clock-check-outline"
    optimistic: true
    web_server:
      sorting_group_id: sorting_group_poliv
    initial_value: "02:00:00"
    restore_value: true
    on_time:
      then:
        - if:
            condition:
              - switch.is_on: auto_poliv # если включен автоматический полив
            then:
              - switch.turn_on: 
                  id: poliv_gazon
              - lambda: !lambda |-
                  id(poliv_timer_state).publish_state(true);
              - script.execute: datetime_timeout
script:
  - id: datetime_timeout
#    mode: restart
    then:
      - if:
          condition:
            - binary_sensor.is_on: poliv_timer_state
          then:
            - globals.set:
                id: poliv_duration_value
                value: !lambda return id(poliv_duration).state * 60;
            - script.execute: timer_tick
            - delay: !lambda |-
                return (int) id(poliv_duration).state * 60 * 1000;  // Переводим минуты в миллисекунды
            - lambda: !lambda |-
                id(poliv_timer_state).publish_state(false);
            - script.stop: timer_tick
            - switch.turn_off:
                id: poliv_gazon
  - id: dinamic_timer
#    mode: restart
    then:
      - if:
          condition:
            - binary_sensor.is_on: poliv_timer_state
          then:
            - globals.set:
                id: poliv_duration_value
                value: !lambda return id(poliv_urgent_number).state * 60;
            - script.execute: timer_tick
            - delay: !lambda |-
                return (int) id(poliv_urgent_number).state * 60 * 1000;  // Переводим секунды в миллисекунды
            - lambda: !lambda |-
                id(poliv_timer_state).publish_state(false);
            - switch.turn_off:
                id: poliv_urgent
            - script.stop: timer_tick
            - switch.turn_off:
                id: poliv_gazon
  - id: timer_tick
    # Перезапускается каждую секунду, пока не остановим командой timer.stop()
    mode: queued
    then:
      # каждый tick это 1 секунда
      - delay: 1s
      - lambda: |-
          id(poliv_duration_value) -= 1;
          // if (id(test_timer) ) {
          //  id(timer_tick).execute();
          // } else {
          //  id(timer_tick).stop();
          // }
      - if:
          condition:
            lambda: return id(poliv_timer_state).state;
          then:
            - script.execute: timer_tick
# Автоматизация света забор
interval:
  - interval: 30s
    then:
      - if:
          condition:
            and:
              - binary_sensor.is_on: sensor_sunset_midnight
              - switch.is_on: switch_sunset_midnight_zabor
          then:
            - switch.turn_on: 
                id: light_zabor
          else:
            - if:
                condition:
                  and:
                    - binary_sensor.is_on: sensor_midnight_sunrise
                    - switch.is_on: switch_midnight_sunrise_zabor
                then:
                  - switch.turn_on: 
                      id: light_zabor
#                else:
#                  - switch.turn_off:
#                      id: light_zabor
      - if: # на всякий случай если при включении датчик давления уже был включен
          condition:
            - binary_sensor.is_on: press_relay_priyamok
            - switch.is_off: water_pump
            - switch.is_on: auto_pump # Если выключатель автодавление включен, насос включается
          then:
            - switch.turn_on: water_pump
      - if: # при включении полива насос должен быть включен
          condition:
            - switch.is_on: poliv_gazon
          then:
            - switch.turn_on: water_pump
# Автоматизация света двор                      
  - interval: 60s
    then:
      - if:
          condition:
            and:
              - binary_sensor.is_on: sensor_sunset_midnight
              - switch.is_on: switch_sunset_midnight_dvor
          then:
            - switch.turn_on: 
                id: light_dvor
          else:
            - if:
                condition:
                  and:
                    - binary_sensor.is_on: sensor_midnight_sunrise
                    - switch.is_on: switch_midnight_sunrise_dvor
                then:
                  - switch.turn_on: 
                      id: light_dvor
#                else:
#                  - switch.turn_off:
#                      id: light_dvor
output:
  - platform: gpio
    pin: GPIO23
    id: vorota
